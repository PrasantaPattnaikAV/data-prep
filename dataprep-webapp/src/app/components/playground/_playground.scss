$base-border-radius: 3px !default;
$base-background-color: white !default;
$base-line-height: 1.5em !default;
$dark-gray: #333 !default;
$light-gray: #DDD !default;
$base-font-color: $dark-gray !default;

$action-color: #b6be00 !important;
$switch-width: 42px;
$switch-padding: 2px;
$switch-height: 22px;
$switch-radius: $switch-height;
$knob-size: $switch-height - ($switch-padding * 2);
$knob-radius: $switch-height - ($switch-padding * 2);
$knob-width: $knob-size;
$switch-background: $base-background-color;
$switch-border-background: darken($base-background-color, 9%);
$switch-shadow: 0 2px 5px transparentize(black, 0.6);
$slide-action-background: $base-background-color;

@mixin slidable-action-bar {
  .action {
    background: $slide-action-background;

    &:hover {
      background: darken($slide-action-background, 5%);
    }
  }
}

@mixin playground-center-layout {
  .playground-center {
    @extend .flex-center;
    position: relative;

    #playground-dataset-parameters {
      box-shadow: $box-shadow-to-bottom;
      @include slidable-top(130px, 0px);
      > * {
        margin: 10px;
      }
    }

    #playground-filter-bar > * {
      margin: 10px;
    }

    #playground-datagrid-container {
      margin: 10px;
      @include calc(height, "100vh - 130px");
    }
  }
}

@mixin recipe-layout {
  .playground-recipe {
    @include slidable-action-bar();
    box-shadow: $box-shadow-to-right;

    > .content > .content-container {
      padding-right: 5px;
    }

    .steps-header {
      margin: 15px 15px 15px 10px;

      .editable-text {
        padding: 5px;
      }

      .steps-header-preparation-text {
        @include ellipsis(85%);
        padding: 2px 0;
        font-size: 1.2em;
        font-weight: 600;
        text-transform: uppercase;
      }
    }

    .label-switch {
      border-radius: $switch-radius;
      cursor: pointer;
      display: inline-block;
      height: $switch-height;
      padding: 3px;
      position: relative;
      width: $switch-width;
      float: right;

      input[type="checkbox"] {
        display: none;

        + .checkbox {
          @include transition(all 0.3s ease);
          background: $switch-border-background;
          border-radius: $switch-radius;
          border: none;
          cursor: pointer;
          height: $switch-height;
          margin-top: 7px;
          padding: 0;
          position: relative;
          width: $switch-width;
          z-index: 0;

          &:before {
            @include position(absolute, 2px 0 0 2px);
            @include transform(scale(1));
            @include transition(all 0.3s ease);
            background: $switch-background;
            border-radius: $switch-radius;
            content: "";
            height: $knob-radius;
            width: $switch-width - ($switch-padding * 2);
            z-index: 1;
          }

          &:after {
            @include position(absolute, 2px 0 0 2px);
            @include transition(all 0.3s ease);
            @include size($knob-size);
            background: $switch-background;
            border-radius: $knob-radius;
            box-shadow: $switch-shadow;
            content: "";
            z-index: 2;
          }
        }

        &:checked {
          + .checkbox {
            background: $action-color;

            &:before {
              @include transform(scale(0));
            }

            &:after {
              left: $switch-width - $knob-width - ($switch-padding);
            }
          }
        }
      }
    }
  }
}

@mixin suggestions-layout {
  .playground-suggestions {
    @include slidable-action-bar();
    box-shadow: $box-shadow-to-left;
  }
}

//-----------------------------------------------------------------------------------------------------------
//-----------------------------------------------------BODY--------------------------------------------------
//-----------------------------------------------------------------------------------------------------------
.playground-container {
  $navigation-border: 1px;
  $navigation-height: 50px;
  $navigation-all-height: ($navigation-height + $navigation-border);
  $playground-height: '100vh - ' + $navigation-all-height;

  height: 100vh;
  @include flex-column();

  #playground-header {
    @include flex-basis($navigation-all-height);
    @include flex-grow(0);
    @include flex-shrink(0);
  }

  .playground {
    @include calc('height', $playground-height);

    @include flex-grow(1);
    @include flex-shrink(1);

    @include flex-row();
    @include align-items(stretch);

    @include recipe-layout();
    @include playground-center-layout();
    @include suggestions-layout();
  }
}


